# vim:ft=sh
# ec2rc


# Check if region information is available for aws commands
if [[ ! -f ~/.aws/config ]] ; then
	export REGION=$(curl --silent http://169.254.169.254/latest/meta-data/placement/availability-zone | cut -c1-9)
	if [[ -z $REGION ]] ; then
		echo "Cannot detect region. If using a not running inside an amazon environment,"
		echo "use aws configure to set it"
		exit 1
	else
		AWSREGION="--region $REGION"
	fi
fi
echo "Configuring AWS CLI"
export AWSCMD="aws --region $REGION --output text"
export AWSGET="aws --region $REGION --output json"

# User/site specific variables, such as TARGET_TYPE and  TARGET_LOCATION can be set in the backup.user.rc file
RCUSERFILE="$(dirname $(readlink -f $0))/backup.user.rc"
if [[ -f $RCUSERFILE ]] ; then
	source $RCUSERFILE
fi

# The folowing can be overwridden by setting the values at the command line or in backup.user.rc file:
# variable	value	desctiptio
# TARGET_TYPE	FS	Backup to a file system
#		GIT	Backup to a git repository
#		S3	Backup to an S3 bucket
# if no value is provided for TARGET_TYPE in backup.user.rc, default to FS
if [[ -z $TARGET_TYPE ]] ; then
        TARGET_TYPE="FS"
fi

echo "TARGET_TYPE is $TARGET_TYPE"

if [[ -n $CONDA_ENV ]] ; then
	if [[ -n $CONDA_EXE ]] ; then
		$CONDA_EXE $CONDA_ENV
	else
		if [[ -f ${CONDA_ROOT}/bin/activate && -d ${CONDA_ROOT}/envs/${CONDA_ENV} ]] ; then 
			source $CONDA_ROOT/bin/activate $CONDA_ENV
			echo "Using conda environment $CONDA_ENV"
		else
			echo "Cannot activate environemt CONDA_ENV=${CONDA_ENV} in CONDA_ROOT=${CONDA_ROOT}"
			echo "the following command failed:"
			echo "source $CONDA_ROOT/bin/activate $CONDA_ENV"
		fi
	fi
fi

echo "Validate pre-requisites"
for COMMAND_CHECK in (cut awk aws git) ; do
	if [[ "$TARGET_TYPE" == "GIT" && "$COMMAND_CHECK" == "git" ]] ; then
		if [[ -z $COMMAND_CHECK ]] ; then
			echo "$COMMAND_CHECK was not found, check path or install"
			exit 1
		else
			echo "$COMMAND_CHECK found"
		fi
	fi
done
# The workdir is the base location to which the backup will take place. You can change the setting the values for the FS and GIT targets at the command line or in backup.user.rc file. 
# for 	location
# FS	The file system to which the backup will be stored
# GIT	A git controlled directory
# S3	A temporaty directory
case $TARGET_TYPE in
        GIT|FS)
		if [[ -z $TARGET_LOCATION ]] ; then
			TARGET_LOCATION="$(pwd)"
		fi
		;;
        S3)
		export TEMPDIR=$(mktemp --directory)
		if [[ -z $TARGET_LOCATION ]] ; then
			echo "The TARGET_LOCATION variable, required for S3 backup is not configured"
			echo "You will need to set it on the command line or in $RCUSERFILE"
			exit 1
		fi
                ;;
	*)
                echo "Unknown TARGET_TYPE defined $TARGET_TYPE"
		echo "Should be GIT, FS or S3"
                exit 1
                ;;
esac
echo "Backing up to $TARGET_LOCATION"

function commit {
        case $TARGET_TYPE in
                GIT)
                        cd $TARGET_LOCATION
			git add *
                        git commit * --message="$* Backup from $(date +%Y-%m-%d_%T)"
			cd -
			;;
		S3)
			$AWSCMD s3 sync --quiet --no-progress --size-only --sse --storage-class INTELLIGENT_TIERING $TEMPDIR $TARGET_LOCATION/$1
			rm -rf $TEMPDIR
		       	;;
	       	*)
		       	# not required in other cases
			;;
       	esac
}

function mksubdir {
	case $TARGET_TYPE in 
		GIT|FS)
			local SUBDIR="${TARGET_LOCATION}/$1"
			;;
		S3)
			local SUBDIR="${TEMPDIR}/$1"
			;;
		*)
			echo "TARGET_TYPE not recognized, aborting..."
			exit 1
			;;
	esac
	
	if [[ ! -d ${SUBDIR} ]]; then 
		mkdir -p ${SUBDIR}
	fi

	echo $SUBDIR
}
